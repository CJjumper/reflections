How did viewing a diff between two versions of a file help you see the bug that was introduced?

It made it so much easier, because I could automatically what had change, so it made the "looking area" so much shorter.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Because it would made it so much easier to go back if I made a mistake.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

When is manual you can choose a more logical order of things, so that it makes a logical sense when you read them later, but it might happen that you just forget or that you are not as carefull and things can get out of hand. With automatically saved versions is just so much to not have a logical thread in your work, but at the same time you do not have to worry about forgetting.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Normal documents do not have a inter-relationship but code documents can be intricately related.

How can you use the commands git log and git diff to view the history of files?

By making git log I can sell all the commits made to that file, and with git diff I can see all of the changes I made in regards to previous versions of the same file.

How might using version control make you more confident to make changes that could break something?

Because if I break something I can always go back! It is just so dead simple to do it, then why not?!

Now that you have your workspace set up, what do you want to try using Git for?

Tracking changes in my code.